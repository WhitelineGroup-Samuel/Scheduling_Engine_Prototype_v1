# =============================================================================
# File: .github/workflows/ci.yml
# Purpose:
#   Continuous Integration pipeline: lint -> type-check -> tests.
#
# Responsibilities:
#   - Run on pull_request and push.
#   - Cache dependencies, set up Python, run Make targets.
#
# Collaborators:
#   - pyproject.toml, mypy.ini, ruff.toml, pytest.ini
# =============================================================================

name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: scheduling_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U postgres -d scheduling_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      APP_ENV: test
      LOG_LEVEL: INFO
      TIMEZONE: Australia/Melbourne
      LOG_JSON: "false"
      # app will likely build DATABASE_URL from parts, but we also expose a full URL:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@localhost:5432/scheduling_test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # When packaging metadata is complete, prefer: pip install -e .[dev]
          pip install -e .[dev] || pip install ruff black mypy pytest pytest-cov sqlfluff pip-audit
          pip install SQLAlchemy alembic pydantic psycopg2-binary python-dotenv typer

      - name: Lint & Format
        run: |
          ruff check .
          black --check .

      - name: Type-check
        run: mypy .

      - name: Run tests
        run: pytest -q

      - name: (Optional) SQL lint
        if: always()
        run: |
          if [ -d "sql" ]; then
            sqlfluff lint sql || true
          fi

      - name: (Optional) Security audit (non-blocking)
        if: always()
        run: pip-audit || true
